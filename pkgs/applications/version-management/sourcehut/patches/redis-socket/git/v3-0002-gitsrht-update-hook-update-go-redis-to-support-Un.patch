From d9683aced0dc3a94c56de2fde31c1765054900fa Mon Sep 17 00:00:00 2001
From: Julien Moutinho <julm+srht@sourcephile.fr>
Date: Fri, 27 Aug 2021 15:39:29 +0200
Subject: [PATCH git.sr.ht v3 2/3] gitsrht-update-hook: update go-redis to
 support Unix sockets

---
 gitsrht-update-hook/options.go     | 12 +++++++-----
 gitsrht-update-hook/post-update.go |  4 ++--
 gitsrht-update-hook/update.go      |  4 ++--
 3 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/gitsrht-update-hook/options.go b/gitsrht-update-hook/options.go
index 8efbb0a..962502a 100644
--- a/gitsrht-update-hook/options.go
+++ b/gitsrht-update-hook/options.go
@@ -1,15 +1,17 @@
 package main
 
 import (
+	"context"
 	"fmt"
 	"os"
 	"strconv"
 	"strings"
 	"time"
 
-	goredis "github.com/go-redis/redis"
+	goredis "github.com/go-redis/redis/v8"
 )
 
+var ctx = context.Background()
 var options map[string]string
 
 func loadOptions() {
@@ -35,10 +37,10 @@ func loadOptions() {
 	var n int
 	if nopts, ok := os.LookupEnv("GIT_PUSH_OPTION_COUNT"); ok {
 		n, _ = strconv.Atoi(nopts)
-		redis.Set(fmt.Sprintf("git.sr.ht.options.%s", uuid),
+		redis.Set(ctx, fmt.Sprintf("git.sr.ht.options.%s", uuid),
 			nopts, 10*time.Minute)
 	} else {
-		nopts, err := redis.Get(fmt.Sprintf(
+		nopts, err := redis.Get(ctx, fmt.Sprintf(
 			"git.sr.ht.options.%s", uuid)).Result()
 		if err != nil {
 			return
@@ -51,12 +53,12 @@ func loadOptions() {
 		opt, ok := os.LookupEnv(fmt.Sprintf("GIT_PUSH_OPTION_%d", i))
 		optkey := fmt.Sprintf("git.sr.ht.options.%s.%d", uuid, i)
 		if !ok {
-			opt, err = redis.Get(optkey).Result()
+			opt, err = redis.Get(ctx, optkey).Result()
 			if err != nil {
 				return
 			}
 		} else {
-			redis.Set(optkey, opt, 10*time.Minute)
+			redis.Set(ctx, optkey, opt, 10*time.Minute)
 		}
 		parts := strings.SplitN(opt, "=", 2)
 		if len(parts) == 1 {
diff --git a/gitsrht-update-hook/post-update.go b/gitsrht-update-hook/post-update.go
index d14d616..fcd7864 100644
--- a/gitsrht-update-hook/post-update.go
+++ b/gitsrht-update-hook/post-update.go
@@ -15,7 +15,7 @@ import (
 	"github.com/go-git/go-git/v5/plumbing"
 	"github.com/go-git/go-git/v5/plumbing/object"
 	"github.com/go-git/go-git/v5/plumbing/storer"
-	goredis "github.com/go-redis/redis"
+	goredis "github.com/go-redis/redis/v8"
 	_ "github.com/lib/pq"
 )
 
@@ -220,7 +220,7 @@ func postUpdate() {
 		var oldref, newref string
 		var oldobj, newobj object.Object
 		updateKey := fmt.Sprintf("update.%s.%s", pushUuid, refname)
-		update, err := redis.Get(updateKey).Result()
+		update, err := redis.Get(ctx, updateKey).Result()
 		if update == "" || err != nil {
 			logger.Println("redis.Get: missing key")
 			continue
diff --git a/gitsrht-update-hook/update.go b/gitsrht-update-hook/update.go
index 72c661a..e33fd4b 100644
--- a/gitsrht-update-hook/update.go
+++ b/gitsrht-update-hook/update.go
@@ -5,7 +5,7 @@ import (
 	"os"
 	"time"
 
-	goredis "github.com/go-redis/redis"
+	goredis "github.com/go-redis/redis/v8"
 )
 
 // XXX: This is run once for every single ref that's pushed. If someone pushes
@@ -31,6 +31,6 @@ func update() {
 		logger.Fatalf("Failed to parse redis host: %v", err)
 	}
 	redis := goredis.NewClient(ropts)
-	redis.Set(fmt.Sprintf("update.%s.%s", pushUuid, refname),
+	redis.Set(ctx, fmt.Sprintf("update.%s.%s", pushUuid, refname),
 		fmt.Sprintf("%s:%s", oldref, newref), 10*time.Minute)
 }
-- 
2.32.0

